predicate gecode_int_element(var int: idx,int: idxoffset,array [int] of var int: x,var int: c);
predicate fzn_all_different_int(array [int] of var int: x);
predicate array_int_lq(array [int] of var int: x,array [int] of var int: y);
array [1..2] of int: X_INTRODUCED_4_ = [1,-1];
array [1..3] of int: X_INTRODUCED_48_ = [1,1,1];
var 2..3: X_INTRODUCED_2_;
var 2..3: X_INTRODUCED_3_;
var 1..2: X_INTRODUCED_5_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_7_ ::var_is_introduced :: is_defined_var;
var -1..1: X_INTRODUCED_8_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_9_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_11_ ::var_is_introduced :: is_defined_var;
var -1..1: X_INTRODUCED_12_ ::var_is_introduced :: is_defined_var;
var 4..5: distance:: is_defined_var:: output_var;
var 0..1: X_INTRODUCED_15_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_16_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_25_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_26_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_27_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_29_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_30_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_31_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_32_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_34_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_41_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_44_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_45_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_46_ ::var_is_introduced :: is_defined_var;
array [1..4] of var int: p:: output_array([1..4]) = [1,4,X_INTRODUCED_2_,X_INTRODUCED_3_];
array [1..4] of var int: X_INTRODUCED_19_ ::var_is_introduced  = [4,1,X_INTRODUCED_3_,X_INTRODUCED_2_];
array [1..4] of var int: X_INTRODUCED_20_ ::var_is_introduced  = [X_INTRODUCED_2_,1,X_INTRODUCED_3_,4];
array [1..4] of var int: X_INTRODUCED_21_ ::var_is_introduced  = [X_INTRODUCED_3_,X_INTRODUCED_2_,4,1];
array [1..4] of var int: X_INTRODUCED_22_ ::var_is_introduced  = [X_INTRODUCED_2_,X_INTRODUCED_3_,1,4];
array [1..4] of var int: X_INTRODUCED_23_ ::var_is_introduced  = [4,X_INTRODUCED_3_,1,X_INTRODUCED_2_];
array [1..4] of var int: X_INTRODUCED_24_ ::var_is_introduced  = [X_INTRODUCED_3_,4,X_INTRODUCED_2_,1];
constraint gecode_int_element(X_INTRODUCED_2_,1,[1,2,1,2],X_INTRODUCED_5_):: defines_var(X_INTRODUCED_5_);
constraint gecode_int_element(X_INTRODUCED_3_,1,[1,2,1,2],X_INTRODUCED_7_):: defines_var(X_INTRODUCED_7_);
constraint gecode_int_element(X_INTRODUCED_2_,1,[1,1,2,2],X_INTRODUCED_9_):: defines_var(X_INTRODUCED_9_);
constraint gecode_int_element(X_INTRODUCED_3_,1,[1,1,2,2],X_INTRODUCED_11_):: defines_var(X_INTRODUCED_11_);
constraint int_abs(X_INTRODUCED_8_,X_INTRODUCED_15_):: defines_var(X_INTRODUCED_15_);
constraint int_abs(X_INTRODUCED_12_,X_INTRODUCED_16_):: defines_var(X_INTRODUCED_16_);
constraint fzn_all_different_int(p);
constraint array_int_lq(p,X_INTRODUCED_19_);
constraint array_int_lq(p,X_INTRODUCED_20_);
constraint array_int_lq(p,X_INTRODUCED_21_);
constraint array_int_lq(p,X_INTRODUCED_22_);
constraint array_int_lq(p,X_INTRODUCED_23_);
constraint array_int_lq(p,X_INTRODUCED_24_);
constraint int_eq_reif(X_INTRODUCED_9_,X_INTRODUCED_11_,false);
constraint int_eq_reif(X_INTRODUCED_5_,X_INTRODUCED_7_,false);
constraint array_bool_and([X_INTRODUCED_29_,X_INTRODUCED_26_],false);
constraint array_bool_and([X_INTRODUCED_36_,X_INTRODUCED_32_],false);
constraint array_bool_and([X_INTRODUCED_38_,X_INTRODUCED_34_],false);
constraint int_lin_eq(X_INTRODUCED_48_,[X_INTRODUCED_44_,X_INTRODUCED_45_,X_INTRODUCED_46_],2);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_5_,X_INTRODUCED_7_,X_INTRODUCED_8_],0):: defines_var(X_INTRODUCED_8_);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_9_,X_INTRODUCED_11_,X_INTRODUCED_12_],0):: defines_var(X_INTRODUCED_12_);
constraint int_lin_eq([-1,-1,1,1,-1],[X_INTRODUCED_9_,X_INTRODUCED_5_,X_INTRODUCED_16_,X_INTRODUCED_15_,distance],-6):: defines_var(distance);
constraint int_eq_reif(X_INTRODUCED_9_,2,X_INTRODUCED_25_):: defines_var(X_INTRODUCED_25_);
constraint int_eq_reif(X_INTRODUCED_5_,1,X_INTRODUCED_26_):: defines_var(X_INTRODUCED_26_);
constraint array_bool_and([X_INTRODUCED_26_,X_INTRODUCED_25_],X_INTRODUCED_27_):: defines_var(X_INTRODUCED_27_);
constraint int_eq_reif(X_INTRODUCED_9_,1,X_INTRODUCED_29_):: defines_var(X_INTRODUCED_29_);
constraint int_eq_reif(X_INTRODUCED_5_,2,X_INTRODUCED_30_):: defines_var(X_INTRODUCED_30_);
constraint array_bool_and([X_INTRODUCED_30_,X_INTRODUCED_29_],X_INTRODUCED_31_):: defines_var(X_INTRODUCED_31_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_9_,X_INTRODUCED_11_],1,X_INTRODUCED_32_):: defines_var(X_INTRODUCED_32_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_9_,X_INTRODUCED_11_],-1,X_INTRODUCED_34_):: defines_var(X_INTRODUCED_34_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_5_,X_INTRODUCED_7_],1,X_INTRODUCED_36_):: defines_var(X_INTRODUCED_36_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_5_,X_INTRODUCED_7_],-1,X_INTRODUCED_38_):: defines_var(X_INTRODUCED_38_);
constraint array_bool_and([X_INTRODUCED_38_,X_INTRODUCED_32_],X_INTRODUCED_40_):: defines_var(X_INTRODUCED_40_);
constraint array_bool_and([X_INTRODUCED_36_,X_INTRODUCED_34_],X_INTRODUCED_41_):: defines_var(X_INTRODUCED_41_);
constraint array_bool_or([X_INTRODUCED_41_,X_INTRODUCED_40_],X_INTRODUCED_42_):: defines_var(X_INTRODUCED_42_);
constraint bool2int(X_INTRODUCED_27_,X_INTRODUCED_44_):: defines_var(X_INTRODUCED_44_);
constraint bool2int(X_INTRODUCED_31_,X_INTRODUCED_45_):: defines_var(X_INTRODUCED_45_);
constraint bool2int(X_INTRODUCED_42_,X_INTRODUCED_46_):: defines_var(X_INTRODUCED_46_);
solve  maximize distance;
