predicate gecode_int_element(var int: idx,int: idxoffset,array [int] of var int: x,var int: c);
predicate fzn_all_different_int(array [int] of var int: x);
predicate array_int_lq(array [int] of var int: x,array [int] of var int: y);
array [1..2] of int: X_INTRODUCED_4_ = [1,-1];
array [1..4] of int: X_INTRODUCED_100_ = [1,1,1,1];
var 1..4: X_INTRODUCED_0_;
var 1..4: X_INTRODUCED_1_;
var 1..4: X_INTRODUCED_2_;
var 1..4: X_INTRODUCED_3_;
var 1..2: X_INTRODUCED_5_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_6_ ::var_is_introduced :: is_defined_var;
var -1..1: X_INTRODUCED_7_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_8_ ::var_is_introduced :: is_defined_var;
var -1..1: X_INTRODUCED_9_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_10_ ::var_is_introduced :: is_defined_var;
var -1..1: X_INTRODUCED_11_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_12_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_13_ ::var_is_introduced :: is_defined_var;
var -1..1: X_INTRODUCED_14_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_15_ ::var_is_introduced :: is_defined_var;
var -1..1: X_INTRODUCED_16_ ::var_is_introduced :: is_defined_var;
var 1..2: X_INTRODUCED_17_ ::var_is_introduced :: is_defined_var;
var -1..1: X_INTRODUCED_18_ ::var_is_introduced :: is_defined_var;
var 4..5: distance:: is_defined_var:: output_var;
var 0..1: X_INTRODUCED_20_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_21_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_23_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_24_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_26_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_27_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_36_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_37_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_38_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_39_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_40_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_42_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_43_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_44_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_45_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_46_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_48_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_49_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_50_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_51_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_52_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_54_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_55_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_56_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_57_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_58_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_59_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_61_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_62_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_63_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_64_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_65_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_67_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_68_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_69_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_70_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_71_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_73_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_74_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_75_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_77_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_78_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_80_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_81_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_83_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_84_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_85_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_87_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_88_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_90_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_91_ ::var_is_introduced :: is_defined_var;
var bool: X_INTRODUCED_93_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_95_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_96_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_97_ ::var_is_introduced :: is_defined_var;
var 0..1: X_INTRODUCED_98_ ::var_is_introduced :: is_defined_var;
array [1..4] of var int: p:: output_array([1..4]) = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_];
array [1..4] of var int: X_INTRODUCED_30_ ::var_is_introduced  = [X_INTRODUCED_1_,X_INTRODUCED_0_,X_INTRODUCED_3_,X_INTRODUCED_2_];
array [1..4] of var int: X_INTRODUCED_31_ ::var_is_introduced  = [X_INTRODUCED_2_,X_INTRODUCED_0_,X_INTRODUCED_3_,X_INTRODUCED_1_];
array [1..4] of var int: X_INTRODUCED_32_ ::var_is_introduced  = [X_INTRODUCED_3_,X_INTRODUCED_2_,X_INTRODUCED_1_,X_INTRODUCED_0_];
array [1..4] of var int: X_INTRODUCED_33_ ::var_is_introduced  = [X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_0_,X_INTRODUCED_1_];
array [1..4] of var int: X_INTRODUCED_34_ ::var_is_introduced  = [X_INTRODUCED_1_,X_INTRODUCED_3_,X_INTRODUCED_0_,X_INTRODUCED_2_];
array [1..4] of var int: X_INTRODUCED_35_ ::var_is_introduced  = [X_INTRODUCED_3_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_0_];
constraint gecode_int_element(X_INTRODUCED_1_,1,[1,2,1,2],X_INTRODUCED_5_):: defines_var(X_INTRODUCED_5_);
constraint gecode_int_element(X_INTRODUCED_0_,1,[1,2,1,2],X_INTRODUCED_6_):: defines_var(X_INTRODUCED_6_);
constraint gecode_int_element(X_INTRODUCED_2_,1,[1,2,1,2],X_INTRODUCED_8_):: defines_var(X_INTRODUCED_8_);
constraint gecode_int_element(X_INTRODUCED_3_,1,[1,2,1,2],X_INTRODUCED_10_):: defines_var(X_INTRODUCED_10_);
constraint gecode_int_element(X_INTRODUCED_1_,1,[1,1,2,2],X_INTRODUCED_12_):: defines_var(X_INTRODUCED_12_);
constraint gecode_int_element(X_INTRODUCED_0_,1,[1,1,2,2],X_INTRODUCED_13_):: defines_var(X_INTRODUCED_13_);
constraint gecode_int_element(X_INTRODUCED_2_,1,[1,1,2,2],X_INTRODUCED_15_):: defines_var(X_INTRODUCED_15_);
constraint gecode_int_element(X_INTRODUCED_3_,1,[1,1,2,2],X_INTRODUCED_17_):: defines_var(X_INTRODUCED_17_);
constraint int_abs(X_INTRODUCED_7_,X_INTRODUCED_20_):: defines_var(X_INTRODUCED_20_);
constraint int_abs(X_INTRODUCED_14_,X_INTRODUCED_21_):: defines_var(X_INTRODUCED_21_);
constraint int_abs(X_INTRODUCED_9_,X_INTRODUCED_23_):: defines_var(X_INTRODUCED_23_);
constraint int_abs(X_INTRODUCED_16_,X_INTRODUCED_24_):: defines_var(X_INTRODUCED_24_);
constraint int_abs(X_INTRODUCED_11_,X_INTRODUCED_26_):: defines_var(X_INTRODUCED_26_);
constraint int_abs(X_INTRODUCED_18_,X_INTRODUCED_27_):: defines_var(X_INTRODUCED_27_);
constraint fzn_all_different_int(p);
constraint array_int_lq(p,X_INTRODUCED_30_);
constraint array_int_lq(p,X_INTRODUCED_31_);
constraint array_int_lq(p,X_INTRODUCED_32_);
constraint array_int_lq(p,X_INTRODUCED_33_);
constraint array_int_lq(p,X_INTRODUCED_34_);
constraint array_int_lq(p,X_INTRODUCED_35_);
constraint int_lin_eq(X_INTRODUCED_100_,[X_INTRODUCED_95_,X_INTRODUCED_96_,X_INTRODUCED_97_,X_INTRODUCED_98_],3);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_6_,X_INTRODUCED_5_,X_INTRODUCED_7_],0):: defines_var(X_INTRODUCED_7_);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_5_,X_INTRODUCED_8_,X_INTRODUCED_9_],0):: defines_var(X_INTRODUCED_9_);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_8_,X_INTRODUCED_10_,X_INTRODUCED_11_],0):: defines_var(X_INTRODUCED_11_);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_13_,X_INTRODUCED_12_,X_INTRODUCED_14_],0):: defines_var(X_INTRODUCED_14_);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_12_,X_INTRODUCED_15_,X_INTRODUCED_16_],0):: defines_var(X_INTRODUCED_16_);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_15_,X_INTRODUCED_17_,X_INTRODUCED_18_],0):: defines_var(X_INTRODUCED_18_);
constraint int_lin_eq([1,1,1,1,1,1,-1],[X_INTRODUCED_21_,X_INTRODUCED_20_,X_INTRODUCED_24_,X_INTRODUCED_23_,X_INTRODUCED_27_,X_INTRODUCED_26_,distance],0):: defines_var(distance);
constraint int_eq_reif(X_INTRODUCED_13_,X_INTRODUCED_12_,X_INTRODUCED_36_):: defines_var(X_INTRODUCED_36_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_6_,X_INTRODUCED_5_],1,X_INTRODUCED_37_):: defines_var(X_INTRODUCED_37_);
constraint array_bool_and([X_INTRODUCED_37_,X_INTRODUCED_36_],X_INTRODUCED_38_):: defines_var(X_INTRODUCED_38_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_6_,X_INTRODUCED_5_],-1,X_INTRODUCED_39_):: defines_var(X_INTRODUCED_39_);
constraint array_bool_and([X_INTRODUCED_39_,X_INTRODUCED_36_],X_INTRODUCED_40_):: defines_var(X_INTRODUCED_40_);
constraint int_eq_reif(X_INTRODUCED_12_,X_INTRODUCED_15_,X_INTRODUCED_42_):: defines_var(X_INTRODUCED_42_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_5_,X_INTRODUCED_8_],1,X_INTRODUCED_43_):: defines_var(X_INTRODUCED_43_);
constraint array_bool_and([X_INTRODUCED_43_,X_INTRODUCED_42_],X_INTRODUCED_44_):: defines_var(X_INTRODUCED_44_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_5_,X_INTRODUCED_8_],-1,X_INTRODUCED_45_):: defines_var(X_INTRODUCED_45_);
constraint array_bool_and([X_INTRODUCED_45_,X_INTRODUCED_42_],X_INTRODUCED_46_):: defines_var(X_INTRODUCED_46_);
constraint int_eq_reif(X_INTRODUCED_15_,X_INTRODUCED_17_,X_INTRODUCED_48_):: defines_var(X_INTRODUCED_48_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_8_,X_INTRODUCED_10_],1,X_INTRODUCED_49_):: defines_var(X_INTRODUCED_49_);
constraint array_bool_and([X_INTRODUCED_49_,X_INTRODUCED_48_],X_INTRODUCED_50_):: defines_var(X_INTRODUCED_50_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_8_,X_INTRODUCED_10_],-1,X_INTRODUCED_51_):: defines_var(X_INTRODUCED_51_);
constraint array_bool_and([X_INTRODUCED_51_,X_INTRODUCED_48_],X_INTRODUCED_52_):: defines_var(X_INTRODUCED_52_);
constraint array_bool_or([X_INTRODUCED_52_,X_INTRODUCED_50_,X_INTRODUCED_46_,X_INTRODUCED_44_,X_INTRODUCED_40_,X_INTRODUCED_38_],X_INTRODUCED_54_):: defines_var(X_INTRODUCED_54_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_13_,X_INTRODUCED_12_],1,X_INTRODUCED_55_):: defines_var(X_INTRODUCED_55_);
constraint int_eq_reif(X_INTRODUCED_6_,X_INTRODUCED_5_,X_INTRODUCED_56_):: defines_var(X_INTRODUCED_56_);
constraint array_bool_and([X_INTRODUCED_56_,X_INTRODUCED_55_],X_INTRODUCED_57_):: defines_var(X_INTRODUCED_57_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_13_,X_INTRODUCED_12_],-1,X_INTRODUCED_58_):: defines_var(X_INTRODUCED_58_);
constraint array_bool_and([X_INTRODUCED_58_,X_INTRODUCED_56_],X_INTRODUCED_59_):: defines_var(X_INTRODUCED_59_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_12_,X_INTRODUCED_15_],1,X_INTRODUCED_61_):: defines_var(X_INTRODUCED_61_);
constraint int_eq_reif(X_INTRODUCED_5_,X_INTRODUCED_8_,X_INTRODUCED_62_):: defines_var(X_INTRODUCED_62_);
constraint array_bool_and([X_INTRODUCED_62_,X_INTRODUCED_61_],X_INTRODUCED_63_):: defines_var(X_INTRODUCED_63_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_12_,X_INTRODUCED_15_],-1,X_INTRODUCED_64_):: defines_var(X_INTRODUCED_64_);
constraint array_bool_and([X_INTRODUCED_64_,X_INTRODUCED_62_],X_INTRODUCED_65_):: defines_var(X_INTRODUCED_65_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_15_,X_INTRODUCED_17_],1,X_INTRODUCED_67_):: defines_var(X_INTRODUCED_67_);
constraint int_eq_reif(X_INTRODUCED_8_,X_INTRODUCED_10_,X_INTRODUCED_68_):: defines_var(X_INTRODUCED_68_);
constraint array_bool_and([X_INTRODUCED_68_,X_INTRODUCED_67_],X_INTRODUCED_69_):: defines_var(X_INTRODUCED_69_);
constraint int_lin_eq_reif(X_INTRODUCED_4_,[X_INTRODUCED_15_,X_INTRODUCED_17_],-1,X_INTRODUCED_70_):: defines_var(X_INTRODUCED_70_);
constraint array_bool_and([X_INTRODUCED_70_,X_INTRODUCED_68_],X_INTRODUCED_71_):: defines_var(X_INTRODUCED_71_);
constraint array_bool_or([X_INTRODUCED_71_,X_INTRODUCED_69_,X_INTRODUCED_65_,X_INTRODUCED_63_,X_INTRODUCED_59_,X_INTRODUCED_57_],X_INTRODUCED_73_):: defines_var(X_INTRODUCED_73_);
constraint array_bool_and([X_INTRODUCED_55_,X_INTRODUCED_37_],X_INTRODUCED_74_):: defines_var(X_INTRODUCED_74_);
constraint array_bool_and([X_INTRODUCED_58_,X_INTRODUCED_39_],X_INTRODUCED_75_):: defines_var(X_INTRODUCED_75_);
constraint array_bool_and([X_INTRODUCED_61_,X_INTRODUCED_43_],X_INTRODUCED_77_):: defines_var(X_INTRODUCED_77_);
constraint array_bool_and([X_INTRODUCED_64_,X_INTRODUCED_45_],X_INTRODUCED_78_):: defines_var(X_INTRODUCED_78_);
constraint array_bool_and([X_INTRODUCED_67_,X_INTRODUCED_49_],X_INTRODUCED_80_):: defines_var(X_INTRODUCED_80_);
constraint array_bool_and([X_INTRODUCED_70_,X_INTRODUCED_51_],X_INTRODUCED_81_):: defines_var(X_INTRODUCED_81_);
constraint array_bool_or([X_INTRODUCED_81_,X_INTRODUCED_80_,X_INTRODUCED_78_,X_INTRODUCED_77_,X_INTRODUCED_75_,X_INTRODUCED_74_],X_INTRODUCED_83_):: defines_var(X_INTRODUCED_83_);
constraint array_bool_and([X_INTRODUCED_55_,X_INTRODUCED_39_],X_INTRODUCED_84_):: defines_var(X_INTRODUCED_84_);
constraint array_bool_and([X_INTRODUCED_58_,X_INTRODUCED_37_],X_INTRODUCED_85_):: defines_var(X_INTRODUCED_85_);
constraint array_bool_and([X_INTRODUCED_61_,X_INTRODUCED_45_],X_INTRODUCED_87_):: defines_var(X_INTRODUCED_87_);
constraint array_bool_and([X_INTRODUCED_64_,X_INTRODUCED_43_],X_INTRODUCED_88_):: defines_var(X_INTRODUCED_88_);
constraint array_bool_and([X_INTRODUCED_67_,X_INTRODUCED_51_],X_INTRODUCED_90_):: defines_var(X_INTRODUCED_90_);
constraint array_bool_and([X_INTRODUCED_70_,X_INTRODUCED_49_],X_INTRODUCED_91_):: defines_var(X_INTRODUCED_91_);
constraint array_bool_or([X_INTRODUCED_88_,X_INTRODUCED_87_,X_INTRODUCED_85_,X_INTRODUCED_84_,X_INTRODUCED_90_,X_INTRODUCED_91_],X_INTRODUCED_93_):: defines_var(X_INTRODUCED_93_);
constraint bool2int(X_INTRODUCED_54_,X_INTRODUCED_95_):: defines_var(X_INTRODUCED_95_);
constraint bool2int(X_INTRODUCED_73_,X_INTRODUCED_96_):: defines_var(X_INTRODUCED_96_);
constraint bool2int(X_INTRODUCED_83_,X_INTRODUCED_97_):: defines_var(X_INTRODUCED_97_);
constraint bool2int(X_INTRODUCED_93_,X_INTRODUCED_98_):: defines_var(X_INTRODUCED_98_);
solve  maximize distance;
